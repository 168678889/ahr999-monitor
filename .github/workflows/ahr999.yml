name: Ahr999指数监控系统（非小号版）
on:
  schedule:
    - cron: '35 * * * *'  # 每小时第35分钟运行
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    # ========== 系统环境准备 ==========
    - name: 安装浏览器依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          chromium-browser \
          libnss3 \
          libx11-xcb1 \
          libxcomposite1 \
          libxcursor1 \
          libxdamage1 \
          libxi6 \
          libxtst6 \
          libxrandr2 \
          libasound2 \
          libatk1.0-0 \
          libgtk-3-0 \
          libgbm1

    # ========== 非小号数据抓取 ==========
    - name: 抓取非小号数据
      id: feixiaohao-crawler
      run: |
        node <<EOF
        const fs = require('fs');
        const puppeteer = require('puppeteer');

        (async () => {
          const browser = await puppeteer.launch({
            executablePath: '/usr/bin/chromium-browser',
            args: [
              '--no-sandbox',
              '--disable-setuid-sandbox',
              '--disable-dev-shm-usage',
              '--lang=zh-CN'  // 中文环境避免反爬
            ],
            headless: 'new'  // 新版无头模式
          });

          try {
            const page = await browser.newPage();
          
            // 模拟人类操作
            await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36');
            await page.setExtraHTTPHeaders({
              'Accept-Language': 'zh-CN,zh;q=0.9'
            });

            // 访问非小号页面
            await page.goto('https://www.feixiaohao.com/data/ahrdata.html', {
              waitUntil: 'networkidle2',
              timeout: 60000
            });

            // 等待数据加载
            await page.waitForSelector('div.val', { timeout: 15000 });
            await page.waitForTimeout(3000);  // 防止快速检测
          
            // 精准数据解析
            const value = await page.evaluate(() => {
              const element = document.querySelector('div.price-box > div.val');
              return element ? parseFloat(element.textContent.replace(/[^\d.]/g, '')) : null;
            });

            // 写入输出变量
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `ahr999_value=${value}`);
          
          } finally {
            await browser.close();
          }
        })();
        EOF

    # ========== 邮件通知系统 ==========
    - name: 发送分级提醒
      if: |
        steps.feixiaohao-crawler.outputs.ahr999_value != '' &&
        (steps.feixiaohao-crawler.outputs.ahr999_value <= 0.8 || steps.feixiaohao-crawler.outputs.ahr999_value >= 1.2)
      env:
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
      run: |
        python3 -c "
        import smtplib, os
        from email.mime.text import MIMEText
        from email.header import Header
      
        value = ${{ steps.feixiaohao-crawler.outputs.ahr999_value }}
      
        # 构建邮件内容
        if value <= 0.45:
            title = '【紧急】Ahr999进入抄底区间'
            content = f'''非小号数据：{value:.4f}
            建议操作：
            1. 立即使用50%资金买入
            2. 剩余资金挂单0.45/0.40/0.35'''
        elif value <= 0.8:
            title = '【机会】Ahr999进入定投区间'
            content = f'''非小号数据：{value:.4f}
            建议操作：
            1. 启动周定投计划
            2. 每下跌0.1加仓20%'''
        else:
            title = '【风险】Ahr999进入高估区间'
            content = f'''非小号数据：{value:.4f}
            建议操作：
            1. 分批卖出持仓
            2. 保留10%底仓'''

        # 邮件发送逻辑
        msg = MIMEText(content, 'plain', 'utf-8')
        msg['Subject'] = Header(title, 'utf-8').encode()
        msg['From'] = Header('非小号监控系统', 'utf-8').encode() + f' <{os.environ["SMTP_USER"]}>'
        msg['To'] = os.environ["RECEIVER_EMAIL"]

        with smtplib.SMTP_SSL('smtp.qq.com', 465) as server:
            server.login(os.environ["SMTP_USER"], os.environ["SMTP_PASSWORD"])
            server.sendmail(os.environ["SMTP_USER"], [os.environ["RECEIVER_EMAIL"]], msg.as_string())
        "
