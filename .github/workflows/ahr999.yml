name: Ahr999监控系统
on:
  schedule:
    - cron: '30 * * * *'  # 每小时第30分钟运行
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
    - name: 安装系统依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          chromium-browser \
          libgbm-dev \
          libxshmfence-dev \
          libnss3 \
          libatk1.0-0 \
          libcups2 \
          libdrm2 \
          libxkbcommon0 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2

    - name: 设置Node.js环境
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: 安装Puppeteer核心
      run: npm install puppeteer

    - name: 数据抓取
      id: crawler
      run: |
        node <<EOF
        const puppeteer = require('puppeteer');
        (async () => {
          const browser = await puppeteer.launch({
            executablePath: '/usr/bin/chromium-browser',
            args: [
              '--no-sandbox',
              '--disable-setuid-sandbox',
              '--disable-dev-shm-usage'
            ]
          });
        
          try {
            const page = await browser.newPage();
            await page.goto('https://www.feixiaohao.com/data/ahrdata.html', {
              waitUntil: 'networkidle2',
              timeout: 60000
            });
          
            // 精准元素定位
            const value = await page.evaluate(() => {
              const element = document.querySelector('div.price-box > div.val');
              return element ? parseFloat(element.textContent.replace(/[^\d.]/g, '')) : null;
            });
          
            console.log(`::set-output name=ahr999_value::${value}`);
          } finally {
            await browser.close();
          }
        })();
        EOF

    - name: 发送提醒
      if: |
        steps.crawler.outputs.ahr999_value != '' &&
        (steps.crawler.outputs.ahr999_value <= 0.8 || steps.crawler.outputs.ahr999_value >= 1.2)
      env:
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
      run: |
        python3 -c "
        import smtplib, os
        from email.mime.text import MIMEText
      
        value = ${{ steps.crawler.outputs.ahr999_value }}
        if value <= 0.5:
            msg = '🚨 极度低估！Ahr999指数：{:.4f}'.format(value)
        elif value <= 0.8:
            msg = '🚩 中度低估！Ahr999指数：{:.4f}'.format(value)
        else:
            msg = '⚠️ 风险预警！Ahr999指数：{:.4f}'.format(value)
      
        message = MIMEText(msg, 'plain', 'utf-8')
        message['Subject'] = 'Ahr999监控提醒'
        message['From'] = os.environ['SMTP_USER']
        message['To'] = os.environ['RECEIVER_EMAIL']
      
        with smtplib.SMTP_SSL('smtp.qq.com', 465) as server:
            server.login(os.environ['SMTP_USER'], os.environ['SMTP_PASSWORD'])
            server.sendmail(os.environ['SMTP_USER'], [os.environ['RECEIVER_EMAIL']], message.as_string())
        "
